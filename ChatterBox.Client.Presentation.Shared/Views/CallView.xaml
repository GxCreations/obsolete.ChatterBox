<UserControl
    x:Class="ChatterBox.Client.Presentation.Shared.Views.CallView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:ChatterBox.Client.Presentation.Shared.Converters"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="500">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" Inverted="True" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="0" />
            <!-- For a Media Element which should be hidden -->
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
                x:Name="VideoGrid"
                SizeChanged="VideoGrid_SizeChanged"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <ContentPresenter Name="PeerVideoPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Visibility="{Binding IsPeerVideoAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <StackPanel Background="White" VerticalAlignment="Top" HorizontalAlignment="Left"
                        Visibility="{Binding IsPeerVideoAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Foreground="Black">
                    <Run Text="{Binding RemoteNativeVideoSize.Width}"/>
                    <Run Text="x"/>
                    <Run Text="{Binding RemoteNativeVideoSize.Height}"/>
                </TextBlock>
            </StackPanel>
            <Image Name="PeerPlaceholder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   Visibility="{Binding IsPeerVideoAvailable, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                   Source="{Binding ProfileSource}" />
            <Border Name="SelfBorder" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <Grid>
                    <ContentPresenter Name="SelfVideoPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      Visibility = "{Binding IsSelfVideoAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <StackPanel Background="White" VerticalAlignment="Top" HorizontalAlignment="Left"
                                Visibility="{Binding IsSelfVideoAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock Foreground="Black"
                                   Visibility="{Binding IsSelfVideoAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Run Text="{Binding LocalNativeVideoSize.Width}"/>
                            <Run Text="x"/>
                            <Run Text="{Binding LocalNativeVideoSize.Height}"/>
                        </TextBlock>
                    </StackPanel>
                    <Image Name="SelfPlaceholder" Source="{Binding OwnProfileSource}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           Visibility="{Binding IsSelfVideoAvailable, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                </Grid>
            </Border>
        </Grid>
        <StackPanel Grid.Row="1" Margin="12,5" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Command="{Binding AnswerCommand}" Style="{StaticResource Button.Conversation.Call.AudioCall}"
                    Visibility="{Binding IsLocalRinging, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button Command="{Binding HangupCommand}" Style="{StaticResource Button.Conversation.Call.End}"
                    Visibility="{Binding IsRemoteRinging, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Button Command="{Binding HangupCommand}" Style="{StaticResource Button.Conversation.Call.End}"
                    Visibility="{Binding IsCallConnected, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button Command="{Binding RejectCommand}" Style="{StaticResource Button.Conversation.Call.End}"
                    Visibility="{Binding IsLocalRinging, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button Command="{Binding SwitchMicCommand}" Style="{StaticResource Button.Conversation.Call.Audio.Mute}"
                    Visibility="{Binding IsMicEnabled, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button Command="{Binding SwitchMicCommand}" Style="{StaticResource Button.Conversation.Call.Audio.Unmute}"
                    Visibility="{Binding IsMicEnabled, Mode=OneWay, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />

            <Button Command="{Binding SwitchVideoCommand}" Style="{StaticResource Button.Conversation.Call.Video.Disable}"
                    Visibility="{Binding ShowVideoOnButton, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button Command="{Binding SwitchVideoCommand}" Style="{StaticResource Button.Conversation.Call.Video.Enable}"
                    Visibility="{Binding ShowVideoOffButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
        <MediaElement Name="SoundPlayElement" Grid.Row="2" />
    </Grid>
</UserControl>
